
##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"$(IOC="IOC_MTCA")")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"$(SCRIPTEXEC="iocshLoad")")

# Configure ecmc
require ecmccfg 6.3.2

# run module startup.cmd (only needed at ESS  PSI auto call at require)
$(ECMCCFG_INIT)$(SCRIPTEXEC) ${ecmccfg_DIR}startup.cmd, "IOC=$(IOC),ECMC_VER=6.3.2,EC_RATE=1000"

# Note NELM equals oversampling factor in this case. Use +-320mv Config file for all 4 channels
epicsEnvSet("NELM",              "20")
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "5")
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=ELM3604, NELM=${NELM=20}, CONFIG=-Sensor_+-320mV"
epicsEnvSet("ECMC_SAMPLE_RATE_MS", 10)
#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"

##############################################################################
## Configure diagnostics:
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"

##############################################################################
## go active
$(SCRIPTEXEC) ($(ecmccfg_DIR)setAppMode.cmd)
iocInit()

##############################################################################
## Store Records to file
dbl > pvs.log
